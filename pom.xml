<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.atscale.gatling</groupId>
  <artifactId>atscale-gatling-core</artifactId>
  <version>1.1</version>
  <packaging>jar</packaging>

  <name>atscale_gatling</name>
  <description>AtScale Gatling Automated Testing Framework</description>
  <url>https://github.com/AtScaleInc/atscale-gatling-core</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:https://github.com/AtScaleInc/atscale-gatling-core.git</connection>
    <developerConnection>scm:git:git@github.com:AtScaleInc/atscale-gatling-core.git</developerConnection>
    <url>https://github.com/AtScaleInc/atscale-gatling-core</url>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <id>stevejhall</id>
      <name>Steve J. Hall</name>
      <email>steve.hall@atscale.com</email>
      <organization>AtScale</organization>
      <roles>
        <role>lead</role>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <properties>
    <maven.compiler.source>19</maven.compiler.source>
    <maven.compiler.target>19</maven.compiler.target>
    <maven.compiler.release>19</maven.compiler.release>
    <scala.version>2.13.14</scala.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <gatling.version>3.14.3</gatling.version>
    <gatling-maven-plugin.version>4.19.2</gatling-maven-plugin.version>
    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
  </properties>
  <build>
    <sourceDirectory>src/main</sourceDirectory>
    <testSourceDirectory>src/test</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>systems.properties</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.gatling</groupId>
        <artifactId>gatling-maven-plugin</artifactId>
        <version>${gatling-maven-plugin.version}</version>
        <configuration>
          <!-- Enterprise Cloud (https://cloud.gatling.io/) configuration reference: https://docs.gatling.io/reference/integrations/build-tools/maven-plugin/#running-your-simulations-on-gatling-enterprise-cloud -->
        </configuration>
      </plugin>
      <!-- support for Scala -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.8.1</version> <!-- Latest as of mid-2025 -->
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Defines a call to a java executable -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>query-extract</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.atscale.java.executors.QueryExtractExecutor</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>open-step-simulation-executor</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.atscale.java.executors.OpenStepSimulationExecutor</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>closed-step-simulation-executor</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.atscale.java.executors.ClosedStepSimulationExecutor</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Surefire runs unit tests during the build process.  Automatically detects and executes tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <useModulePath>false</useModulePath>
        </configuration>
      </plugin>
      <!-- Plugin to sign the artifacts there is a settings.xml file configured to support this capability located at ~/.m2/settings.xml-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <gpgArguments>
            <arg>--batch</arg>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
          </gpgArguments>
        </configuration>
      </plugin>
      <!-- Plugin to deploy the artifacts -->
      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>0.8.0</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
        </configuration>
      </plugin>
      <!-- Plugin to attach sources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Maven Central requires a Javadoc JAR for published artifacts.  We generate an empty one -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <failOnError>false</failOnError>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.13.14</version>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.13</artifactId>
      <version>3.2.18</version>
      <scope>test</scope>
    </dependency>
    <!-- For Gatling load simulations, we only need this single dependency -->
    <dependency>
      <groupId>io.gatling.highcharts</groupId>
      <artifactId>gatling-charts-highcharts</artifactId>
      <version>${gatling.version}</version>
    </dependency>
    <!-- For JDBC load simulations, we need to add the jdbc plugin -->
    <dependency>
      <groupId>org.galaxio</groupId>
      <artifactId>gatling-jdbc-plugin_2.13</artifactId>
      <version>0.14.1</version>
    </dependency>
    <!-- For AtScale JDBC Interface -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.7.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.18</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.2</version>
      <scope>test</scope>
    </dependency>
    <!-- We have mixed dependencies in the dependency tree. -->
    <!-- Maven will load the following transitive dependencies automatically forcing all to the specified package versions-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.19.2</version>
    </dependency>
    <dependency>
      <groupId>org.jodd</groupId>
      <artifactId>jodd-util</artifactId>
      <version>6.3.0</version>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>4.9.3</version>
    </dependency>
    <dependency>
      <groupId>org.xmlresolver</groupId>
      <artifactId>xmlresolver</artifactId>
      <version>6.0.16</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.18.0</version>
    </dependency>
    <!-- Support JDBC for AtScale Installer Version requires Hive JDBC Uber Jar downloaded to /lib.
    It is sourced from https://github.com/timveil/hive-jdbc-uber-jar/releases -->
    <dependency>
      <groupId>veil.hdp.hive</groupId>
      <artifactId>hive-jdbc-uber</artifactId>
      <version>2.6.3.0-235</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/hive-jdbc-uber-2.6.3.0-235.jar</systemPath>
    </dependency>
  </dependencies>
</project>
